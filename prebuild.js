import { dirname, join } from 'node:path'
import { fileURLToPath } from 'node:url'
import { mkdirSync } from 'node:fs'
import { clearDir, copyDir } from './dist/dirs.js'
import { makeModifier } from './dist/marker.js'
import { rwModify } from './dist/publicrw.js'

// NOTE: –ü–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º npm run build:npm –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω build –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è `from './dist/*'`
// –ü–æ—Å–ª–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–Ω–µ—Å—Ç–∏ –ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å—Å—ã–ª–∫–∏
// ![](stage.png) - https://raw.githubusercontent.com/AlexLonberg/nodejs-pkg-tools/master/stage.png
// [src/errors.ts](src/errors.ts) - https://github.com/AlexLonberg/nodejs-pkg-tools/blob/master/src/errors.ts
// [—Ñ–∞–π–ª üìÑ](src/types.ts) - https://github.com/AlexLonberg/nodejs-pkg-tools/blob/master/src/types.ts

const wd = dirname(fileURLToPath(import.meta.url))
const dest = join(wd, 'npm')

if (clearDir(dest) === false) throw new Error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ npm.')
mkdirSync(dest, { recursive: true })

const modifier = makeModifier((value) => [true, true,
  typeof value === 'string'
    ? value.replace('dist/', '')
    : (() => { throw new Error('–ù–µ–≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.') })()
])

if (rwModify({
  mode: 'strict_error',
  include: [
    'name',
    'version',
    'description',
    'author',
    'repository',
    'homepage',
    'keywords',
    'license',
    'engines',
    'type'
  ],
  sample: {
    main: modifier,
    types: modifier,
    'exports.*.*': modifier
  }
}, join(wd, 'package.json'), join(dest, 'package.json'))
  .errors.isFatalError) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ package.json')

if (copyDir(wd, dest, ['LICENSE.md', 'README.md']) !== true) {
  throw new Error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤.')
}

console.log('\x1b[41m \x1b[37m –í–ù–ò–ú–ê–ù–ò–ï: –í —Ñ–∞–π–ª README.md –Ω–∞–¥–æ –≤–Ω–µ—Å—Ç–∏ –ø—Ä–∞–≤–∫–∏ –∞–¥—Ä–µ—Å–æ–≤ stage.png, src/errors.ts, src/types.ts \x1b[0m')
